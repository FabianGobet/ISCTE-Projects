PandionJ Error Report

java.lang.NumberFormatException : For input string: "Index 4 out of bounds for length 4"

Exception trace: 

java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
java.base/java.lang.Integer.parseInt(Integer.java:652)
java.base/java.lang.Integer.<init>(Integer.java:1105)
pt.iscte.pandionj.figures.StackFrameFigure.<init>(StackFrameFigure.java:68)
pt.iscte.pandionj.figures.StackContainer.addFrame(StackContainer.java:23)
pt.iscte.pandionj.RuntimeViewer.lambda$1(RuntimeViewer.java:158)
pt.iscte.pandionj.PandionJView.executeInternal(PandionJView.java:327)
pt.iscte.pandionj.extensibility.PandionJUI.lambda$1(PandionJUI.java:136)
org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:3933)
org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3564)
org.eclipse.jface.window.Window.runEventLoop(Window.java:821)
org.eclipse.jface.window.Window.open(Window.java:797)
org.eclipse.jface.dialogs.MessageDialog.open(MessageDialog.java:394)
pt.iscte.pandionj.PandionJView.lambda$1(PandionJView.java:249)
pt.iscte.pandionj.PandionJView.executeInternal(PandionJView.java:327)
pt.iscte.pandionj.extensibility.PandionJUI.lambda$1(PandionJUI.java:136)
org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:3933)
org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3564)
org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1173)
org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1062)
org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:156)
org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:628)
org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:339)
org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:563)
org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:151)
org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:155)
org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:199)
org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:137)
org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:107)
org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:391)
org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:246)
java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
java.base/java.lang.reflect.Method.invoke(Method.java:566)
org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
org.eclipse.equinox.launcher.Main.basicRun(Main.java:595)
org.eclipse.equinox.launcher.Main.run(Main.java:1501)
Error code: -1727436076

User code: 

class vetores {
	
	static int[] naturals(int n){
		int[] v = new int[n];
		int i = 0;
		while(i<n){
			v[i] = i+1;
			i++;
		}
		return v;
	}
	
	static int vectorsum(int[] v){
		int i = 0;
		int sum = 0;
		while(i<v.length){
			sum = sum + v[i];
			i++;
		}
		return sum;
	}
	
	static int[] ramdom(int n){
		int i = 0;
		int[] v = new int[n];
		while(i<n){
			double d = Math.random() * 10;
			v[i] = (int)d;
			i++;
		}
		return v;
	}
	
	
	static double average(int[] v){
		double a = (double)vectorsum(v)/(v.length);
		return a;
	}
		
	
	static int[] replicate(int[] v, int n){
		int[] a = new int[n];
		int i = 0 ;
		while(i<n){
			a[i] = v[i];
			i++;
		}
		return a;
	}
	
	static boolean exists(int n, int[] v){
		int i = 0;
		while(i<v.length){
			if(n==v[i]){
				return true;
			}
			i++;
		}
		return false;
	}
	
	
	static int count(int n, int[] v){
		int i = 0;
		int count = 0;
		while(i<v.length){
			if(n==v[i]){
				count++;
			}
			i++;
		}
		return count;
	}
	
	
	static int max(int[] v){
		int i = 1;
		int max = v[0];
		while(i<v.length){
			if(max<v[i]){
				max = v[i];
			}
			i++;
		}
		return max;
	}
	
	static int[] subcopy(int a, int b, int[] v){
		int[] v2 = new int[b-a+1];
		int i = a;
		while(i<=b){
			v2[i-a]=v[i];
			i++;
		}
		return v2;
	}
	
	
	static int[] firstHalf(boolean middle, int[] v){
		int end = v.length/2;
		if(!middle){
			end--;
		}
		return subcopy(0,end,v);
	}
	
	
	static int[] secondHalf(boolean middle, int[] v){
		int beggining = v.length/2;
		if(!middle){
			beggining++;
		}
		return subcopy(beggining, v.length-1,v);
	}
	
	
	static int[] merge(int[] a, int[] b){
		int[] v = new int[a.length + b.length];
		int i = 0;
		while(i<a.length){
			v[i] = a[i];
			i++;
		}
		while(i<a.length+b.length){
			v[i] = b[i-a.length];
			i++;
		}
		return v;
	}

	
	static int[] invert(int[] v){
		int i = 0;
		int[] a = new int[v.length];
		while(i<v.length){
>>>>			a[i] = v[v.length - i];
			i++;
		}
		return a;
	}
	
		

}


Call stack:

invert(v)

