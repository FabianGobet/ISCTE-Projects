/*
	Example: A evaluation calculation FIS (fuzzy inference system)
	Calculates evaluation based on 'servie' and 'curriculum'

	If you want to about this example (and fuzzy logic), please 
	read Matlab's tutorial on fuzzy logic toolbox 
	http://www.mathworks.com/access/helpdesk/help/pdf_doc/fuzzy/fuzzy.pdf

									Pablo Cingolani 
									pcingola@users.sourceforge.net
*/

FUNCTION_BLOCK mushieFunc	// Block definition (there may be more than one block per file)

VAR_INPUT				// Define input variables
	mushie : REAL;
	leftSensor : REAL;
	middleSensor : REAL;
	rightSensor : REAL;
END_VAR

VAR_OUTPUT				// Define output variable
	action : REAL;
	turnAngle : REAL;
END_VAR


FUZZIFY mushie			
	TERM poisonous := 0;
	TERM none := 0.5;
	TERM edible := 1;
END_FUZZIFY


FUZZIFY leftSensor			
	TERM near := (0,1) (1,0);
	TERM medium := (1,0) (3.5,0.3) (5,1) (6.5,0.3) (7,0);
	TERM far := (7,0) (10,1);
END_FUZZIFY

FUZZIFY middleSensor			
	TERM near := (0,1) (1,0);
	TERM medium := (1,0) (3.5,0.3) (5,1) (6.5,0.3) (7,0);
	TERM far := (7,0) (10,1);
END_FUZZIFY

FUZZIFY rightSensor			
	TERM near := (0,1) (1,0);
	TERM medium := (1,0) (3.5,0.3) (5,1) (6.5,0.3) (7,0);
	TERM far := (7,0) (10,1);
END_FUZZIFY

DEFUZZIFY turnAngle			
	TERM strongright := (-45,1) (-35,1) (-34,0);
	TERM right := (-45,0.7) (-35,1) (-22,1) (-20,0);
	TERM center := (-20,0) (-10,0.1) (0,1) (10,0.1) (20,0) ;
	TERM left := (20,0) (22,1) (35,1) (45,0.7);
	TERM strongleft := (34,0) (35,1) (45,1);
	METHOD : COG;		
	DEFAULT := 45;		
END_DEFUZZIFY


DEFUZZIFY action			
	TERM noAction := (0.3,0) (1,1) (1.7,0);
	TERM destroy := (0,1) (0.2,1) (0.3,0);
	TERM pickup := (1.7,0) (1.8,1) (2,1);
	METHOD : COG;		
	DEFAULT := 1;		
END_DEFUZZIFY


 
RULEBLOCK No1
	AND : MIN;		
	ACT : MIN;			
	ACCU : MAX;			

	RULE 1 : IF mushie IS poisonous AND (leftSensor IS near OR rightSensor IS near OR middleSensor IS near) THEN action IS destroy;
	RULE 2 : IF mushie IS edible AND (leftSensor IS near OR rightSensor IS near OR middleSensor IS near) THEN action IS pickup;
	RULE 3 : IF mushie IS none THEN action IS noAction;
	
	
END_RULEBLOCK

RULEBLOCK No2
	AND : MIN;		
	ACT : MIN;			
	ACCU : MAX;			

	RULE 1 : IF leftSensor IS near OR leftSensor IS far THEN turnAngle IS strongleft;
	RULE 2 : IF rightSensor IS near OR rightSensor IS far THEN turnAngle IS strongright;
	
	RULE 3 : IF leftSensor IS medium OR leftSensor IS far THEN turnAngle IS left;
	RULE 4 : IF rightSensor IS medium OR rightSensor IS far THEN turnAngle IS right;

	RULE 5 : IF middleSensor IS near OR middleSensor IS medium OR middleSensor IS far  THEN turnAngle IS center;	
END_RULEBLOCK

END_FUNCTION_BLOCK




